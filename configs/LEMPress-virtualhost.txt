#microcache
fastcgi_cache_path /etc/nginx/cache/URL levels=1:2 keys_zone=URL:10m inactive=10m max_size=500m;

server {
listen 80;
server_name www.URL;
rewrite ^(.*) http://URL$1/ permanent;
}

server {
  listen   80;
  server_name  URL;
  root   /home/deployer/sites/URL;
  port_in_redirect off;
  error_log /var/log/nginx/URL.log warn;
  
  
rewrite ^/sitemap\.xml$ /sitemap_index.xml permanent;
rewrite ^/([a-z]+)?-?sitemap\.xsl$ /index.php?xsl=$1 last;
rewrite ^/sitemap_index\.xml$ /index.php?sitemap=1 last;
rewrite ^/([^/]+?)-sitemap([0-9]+)?\.xml$ /index.php?sitemap=$1&sitemap_n=$2 last;

  #Cache everything by default - microcache
	set $no_cache 0;
	#Don't cache logged in users or commenters
	if ( $http_cookie ~* "comment_author_|wordpress_(?!test_cookie)|wp-postpass_" ) {
			set $no_cache 1;
	}
	#Don't cache the following URLs
	if ($request_uri ~* "/(wp-admin/|wp-login.php)")
	{
			set $no_cache 1;
	}
	
	# Bypass if WordPress admin cookie is set
	if ($http_cookie ~* "wordpress_logged_in_")
	{
	    set $no_cache 1;
	}
	add_header X-Cache $upstream_cache_status;


  location / {
    index  index.php;
    try_files $uri $uri/ /index.php?$args;
  }

  location ~ \.php$ {
    error_page 502 = @fpm;
    fastcgi_pass   127.0.0.1:9003; #hhvm 
    #fastcgi_pass unix:/var/run/hhvm/hhvm.sock;
    fastcgi_index  index.php;
    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
    include fastcgi_params;
    
      
    fastcgi_intercept_errors on;
    fastcgi_split_path_info ^(.+\.php)(.*)$;
    fastcgi_hide_header X-Powered-By;
    
	###########################
	######microcache###########
	###########################
		#matches keys_zone in fastcgi_cache_path
		fastcgi_cache URL;

		#don't serve pages defined earlier
		fastcgi_cache_bypass $no_cache;

		#don't cache pages defined earlier
		fastcgi_no_cache $no_cache;

		#defines the default cache time
		fastcgi_cache_valid 200 301 302 304 10m;

		#unsure what the impacts of this variable is
		fastcgi_max_temp_file_size 3M;

		#Use stale cache items while updating in the background
		fastcgi_cache_use_stale updating error timeout invalid_header http_500;
		fastcgi_cache_lock on;
		fastcgi_cache_lock_timeout 10s;
  }
  
location @fpm {
  try_files $uri /index.php;
  include fastcgi_params;
  #fastcgi_pass unix:/var/run/php5-fpm.sock;
  fastcgi_pass   127.0.0.1:9001; #php fpm
  fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
  fastcgi_index index.php;
}

location ~ /purge(/.*) {
	fastcgi_cache_purge URL "$scheme://$host$request_method$request_uri";
	return 200;
	allow 127.0.0.1;
	deny all;
	} 
  
#includes the cache plugins configuration and other custom re-write rules
include /home/deployer/sites/URL/nginx.conf;
include /etc/nginx/nginx-locations.conf;
include /etc/nginx/nginx-pagespeed.conf;

# Varnish talks to us as maxcdn.com:8080 but when we rewrite
# urls we should use maxcdn.com because that's what the
# outside world uses for us.
pagespeed MapRewriteDomain URL URL:8080;

include /etc/nginx/nginx-seciurity.conf;


}
